apiVersion: v1
kind: Namespace
metadata:
  name: docker-registry
  labels:
    name: docker-registry

#Script
--- 
apiVersion: cert-manager.io/v1alpha2
kind: Issuer
metadata:
  name: tls-ca-issuer
  namespace: docker-registry
  labels:
    name: docker-registry
spec:
  ca:
    secretName: my-ca-tls-secret
---
# Reference: https://cert-manager.io/docs/usage/certificate/
apiVersion: cert-manager.io/v1alpha2
kind: Certificate
metadata:
  name: my-tls-certificate
  namespace: docker-registry
  labels:
    name: docker-registry
spec:
  secretName: my-app-tls-secret
  dnsNames:
    - my-app.dev.local
  issuerRef:
    name: tsl-ca-issuer
    kind: Issuer
---
apiVersion: v1
kind: Secret
metadata:
  name: docker-registry
  namespace: docker-registry
type: Opaque
data:
  HTPASSWD: YWRtaW46JGFwcjEkcmRRa2s5OVckTmFCck5EWEZtNE0vNjdtYjNOeFAvLg==
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: docker-registry
  name: docker-registry
data:
  registry-config.yml: |
    version: 0.1
    log:
      fields:
        service: registry
    storage:
      cache:
        blobdescriptor: inmemory
      filesystem:
        rootdirectory: /var/lib/registry
      delete:
        enabled: true
    http:
      addr: :5000
      headers:
        X-Content-Type-Options: [nosniff]
    auth:
      htpasswd:
        realm: basic-realm
        path: /auth/htpasswd
    health:
      storagedriver:
        enabled: true
        interval: 10s
        threshold: 3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry
  namespace: docker-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-registry
  template:
    metadata:
      labels:
        app: docker-registry
    spec:
      containers:
        - name: docker-registry
          image: registry:2.6.2
          env:
            - name: REGISTRY_HTTP_ADDR
              value: ":5000"
            - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
              value: "/var/lib/registry"
          ports:
          - name: http
            containerPort: 5000
          volumeMounts:
          - name: image-store
            mountPath: "/var/lib/registry"
      volumes:
        - name: image-store
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: docker-registry
  namespace: docker-registry
  labels:
      app: docker-registry
spec:
  selector:
    app: docker-registry
  ports:
    - name: http
      protocol: TCP
      port: 5000
      targetPort: 5000
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
    kubernetes.io/tls-acme: 'true'
  name: docker-registry
  namespace: docker-registry
spec:
  tls:
  - hosts:
    - my-app.dev.local
    secretName: my-app-tls-secret
  rules:
  - host: my-app.dev.local
    http:
      paths:
      - backend:
          serviceName: docker-registry
          servicePort: 5000
        path: /